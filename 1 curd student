// Creating a collection named 'Student' and inserting 10 documents.
db.Student.insertMany([
    { Roll_No: "A01", Name: "John", Class: "FE", Marks: 75, Address: "Address1", Enrolled_Courses: ["DBMS", "Math"] },
    { Roll_No: "A02", Name: "Alice", Class: "SE", Marks: 60, Address: "Address2", Enrolled_Courses: ["TOC", "DBMS"] },
    { Roll_No: "A03", Name: "Bob", Class: "TE", Marks: 45, Address: "Address3", Enrolled_Courses: ["OS", "DBMS"] },
    { Roll_No: "A04", Name: "Emma", Class: "FE", Marks: 90, Address: "Address4", Enrolled_Courses: ["DBMS", "TOC"] },
    { Roll_No: "A05", Name: "David", Class: "BE", Marks: 55, Address: "Address5", Enrolled_Courses: ["Math", "Physics"] },
    { Roll_No: "A06", Name: "Olivia", Class: "TE", Marks: 80, Address: "Address6", Enrolled_Courses: ["TOC", "DBMS"] },
    { Roll_No: "A07", Name: "Liam", Class: "SE", Marks: 30, Address: "Address7", Enrolled_Courses: ["DBMS", "TOC"] },
    { Roll_No: "A08", Name: "Sophia", Class: "FE", Marks: 85, Address: "Address8", Enrolled_Courses: ["Math", "Physics"] },
    { Roll_No: "A09", Name: "James", Class: "BE", Marks: 40, Address: "Address9", Enrolled_Courses: ["DBMS"] },
    { Roll_No: "A10", Name: "Mia", Class: "TE", Marks: 25, Address: "Address10", Enrolled_Courses: ["OS", "TOC"] }
]);

1. List names of students who enrolled in both "DBMS" and "TOC".

db.Student.find({ Enrolled_Courses: { $all: ["DBMS", "TOC"] } }, { Name: 1, _id: 0 });

2. List Roll numbers and class of students with marks more than 50 or class as "TE".

db.Student.find(
    { $or: [ { Marks: { $gt: 50 } }, { Class: "TE" } ] },
    { Roll_No: 1, Class: 1, _id: 0 }
);
3. Update the entire record of Roll_No "A10".
db.Student.updateOne(
    { Roll_No: "A10" },
    { $set: { Name: "Updated Name", Class: "Updated Class", Marks: 70, Address: "Updated Address", Enrolled_Courses: ["Updated Course1", "Updated Course2"] } }
);

4. Display the names of students having the 3rd and 4th highest marks.
db.Student.find({}, { Name: 1, Marks: 1, _id: 0 })
    .sort({ Marks: -1 })
    .skip(2)
    .limit(2);

5. Delete records of students with marks less than 20.
db.Student.deleteMany({ Marks: { $lt: 20 } });

6. Delete only the first record from the collection.

db.Student.deleteOne({});






