-- Creating Customer table
CREATE TABLE Customer (
    CustID INT PRIMARY KEY,
    Name VARCHAR(50),
    Cust_Address VARCHAR(100),
    Phone_no VARCHAR(15),
    Email_ID VARCHAR(50),
    Age INT
);

-- Insert sample data into Customer table
INSERT INTO Customer (CustID, Name, Cust_Address, Phone_no, Email_ID, Age) VALUES
(1, 'John Doe', 'Pune', '1234567890', 'john@example.com', 40),
(2, 'Jane Smith', 'Mumbai', '0987654321', 'jane@example.com', 30),
(3, 'Alice Johnson', 'Pune', '1122334455', 'alice@example.com', 36);

-- Creating Branch table
CREATE TABLE Branch (
    BranchID INT PRIMARY KEY,
    Branch_Name VARCHAR(50),
    Address VARCHAR(100)
);

-- Insert sample data into Branch table
INSERT INTO Branch (BranchID, Branch_Name, Address) VALUES
(1, 'Main Branch', 'Pune'),
(2, 'City Branch', 'Mumbai');
-- 1. Create the tables with referential integrity. 

-- Creating Account table with foreign keys referencing Customer and Branch
create table Account(
account_no int primary key,
BranchID int,
CustID int,
date_open DATE,
Account_type varchar(50),
Balance int,
foreign key (BranchID) references Branch(BranchID),
foreign key (CustID) references Customer(CustID)
);

INSERT INTO Account (account_no, BranchID, CustID, date_open, Account_type, Balance) VALUES
(101, 1, 1, '2022-01-01', 'Saving Account', 5000.00),
(102, 2, 2, '2023-03-15', 'Current Account', 15000.00),
(103, 1, 3, '2021-11-10', 'Saving Account', 3000.00);

-- 3. Create an Index on primary key column of table Account 

create index acc_id on Account(account_no);

-- SHOW INDEX FROM Account;

-- 4. Create the view as Customer_Info displaying the customer details for age less than 45. 

CREATE VIEW Customer_Info AS
SELECT * FROM Customer
WHERE Age < 45;

SELECT * FROM Customer_Info;

-- 5. Update the View with open date as 16/4/2017 

CREATE OR REPLACE VIEW Customer_Info AS
SELECT c.*, a.date_open
FROM Customer c
JOIN Account a ON c.CustID = a.CustID
WHERE c.Age < 45 AND a.date_open = '2017-04-16';

SELECT * FROM Customer_Info;

-- 6. Create a Sequence for the Branch Table
-- MySQL does not have a direct SEQUENCE object, but you can use AUTO_INCREMENT:

ALTER TABLE Branch MODIFY BranchID INT AUTO_INCREMENT;

-- 7. Create synonym ‘Branch_info’ for branch table.
Create view Branch_info as 
select * from Branch;
